Each register is represented by (segment, offset, length)
e.g. ('stack', 4, 4) means stack[4:8]
All values in little endian. LSB in low offset.

Arithmetic instructions. All operands must have the same size. 
add r1, r2 (r2 = r1 + r2)
sub r1, r2 (r2 = r1 - r2)

add_ex r1, r2, r3 (r3 = r1 + r2, len(r3) must = len(r1), len(r2))
sub_ex r1, r2, r3 (r3 = r1 - r2)
mul_ex r1, r2, r3 (r3 = r1 * r2)
div_ex r1, r2, r3 (r3 = r1/r2)
mod_ex r1, r2, r3 (r3 = r1%r2)

Note, in low level, div and mod are implemented by the same operation. We handle that in codegen.
In this way, the intermediate code is three-address code, easier to handle in the compiler.

Comparison instructions. 
For lt, gt, le, ge, all operands must have the same size. 
For eq and ne, r1 and r2 must have the same size.
lt r1, r2, r3 (r3 = (r1 < r2))
gt
le
ge
eq
ne

sl
sr

Special instructions. Register size can be different.
tobool r1, r2 (r2 must be 1 bit)

assign r1, immediate (r1 = immediate, automatic extension and truncation)

copy r1, r2 (r2 = r1, automatic extension and truncation)

measure q1, c1